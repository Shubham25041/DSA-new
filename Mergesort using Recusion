#include<bits/stdc++.h>
using namespace std;

void merge(int arr[], int start, int mid, int end);

void mergesort(int arr[], int start, int end){
    if(start == end)
    return;
    
    int mid = start + (end - start) / 2;
    mergesort(arr, start, mid);  // left
    mergesort(arr, mid+1, end);  // right
    merge(arr, start, mid, end);
}

void merge(int arr[], int start, int mid, int end){
    vector<int>temp(end-start+1);
    
    int left=start, right=mid+1, index=0;
    
    while(left <= mid && right <= end){
        if(arr[left] <= arr[right]){
            temp[index] = arr[left];
            index++, left++;
        }
        else{
            temp[index] = arr[right];
            index++, right++;
        }
    }
    
    // Element left in Left array 
    while(left <= mid){
        temp[index] = arr[left];
        index++, left++;
    }
    
    // Element left in Right array
    while(right <= end){
        temp[index] = arr[right];
        index++, right++;
    }
    
    index = 0;
    while(start <= end){
        arr[start] = temp[index];
        start++, index++;
    }
}

int main(){
    int arr[] = {12,23,4,5,1,78,34};
    mergesort(arr,0,6);
    
    for(int i=0; i<=6; i++){
        cout<<arr[i]<<" ";
    }
}
