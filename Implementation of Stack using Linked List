#include<bits/stdc++.h>
using namespace std;

class Node{
    public:
    int data;
    Node *next;
    
    // constructor
    Node(int value){
        data = value;
        next = NULL;
    }
};

class Stack{
    Node *top;
    int size;
    
    public:
    // constructor
    Stack(){
        top = NULL;
        size = 0;
    }
    
    
    // PUSH
    void push(int value){
        Node *temp = new Node(value);
        if(temp == NULL){
            cout<<"Stack Overflow"<<endl;
            return;
        }
        else{
            temp->next = top;
            top = temp;
            size++;
            cout<<"Pushed: "<<value<<" into the Stack"<<endl;
        }
    }
    
    // POP
    void pop(){
        Node *temp = top;
        if(temp == NULL){
            cout<<"Stack Underflow"<<endl;
            return;
        }
        else{
            cout<<"Popped: "<<top->data<<" from the Stack"<<endl;
            top = top->next;
            delete temp;
            size--;
        }
    }
    
    // PEEK
    int peek(){
        if(top == NULL){
            cout<<"Stack is Empty"<<endl;
            return -1;
        }
        else{
            return top->data;
        }
    }
    
    // IsEmpty
    bool IsEmpty(){
        return top==NULL;
    }
    
    //IsSize
    int IsSize(){
        return size;
   }
    
};



int main(){
    
    Stack S;
    S.push(12);
    S.push(43);
    S.push(29);
    S.push(77);
    S.pop();
    cout<<S.peek()<<endl;
    cout<<S.IsSize()<<endl;
    cout<<S.IsEmpty()<<endl;
    
    
}
