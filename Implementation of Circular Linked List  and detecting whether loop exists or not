#include<bits/stdc++.h>
using namespace std;

class Node{
    public:
    int data;
    Node *next;
    
    // constructor
    Node(int value){
        data = value;
        next = NULL;
    }
};

bool Check(vector<Node*> &visited , Node *temp){
    for(int i=0; i<visited.size(); i++){
        if(visited[i] == temp)
        return 1;
    }
    
    return 0;
}

int main(){
    
    Node *head,*tail;
    int arr[] = {2,3,5,8,9};
    
    for(int i=0; i<5; i++){
        if(head == NULL){
            head = new Node(arr[i]);
            tail = head;
        }
        else{
            tail->next = new Node(arr[i]);
            tail = tail->next;
        }
    }
    
    Node *curr=head;
    while(curr->next != NULL){
        curr = curr->next;
    }
    curr->next = head;
    head = curr->next;
    
    Node *temp = head;
    vector<Node*>visited;
    
    while(temp != NULL){
        if(Check(visited,temp)){
            cout<<1;
            break;
        }
        
        visited.push_back(temp);
        temp = temp->next;
    }
    
    // cout<<0;
    if(temp==NULL)   // This detects whether the temp is currently NULL or not if yes then only it returns 0 this escape us form the forcibly printing the zero
    cout<<0;
    
}
