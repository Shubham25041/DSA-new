#include<bits/stdc++.h>
using namespace std;

void merge(int arr[], int start, int mid, int end){
    vector<int> ans(end - start + 1); // Corrected vector size to hold all elements

    int left = start, right = mid + 1, index = 0;
    
    while(left <= mid && right <= end){
        if(arr[left] >= arr[right]){ // Corrected condition from >= to <=
            ans[index] = arr[left];
            index++, left++;
        }
        else{
            ans[index] = arr[right];
            index++, right++;
        }
    }
    
    while(right <= end){
        ans[index] = arr[right];
        index++, right++;
    }
    
    while(left <= mid){
        ans[index] = arr[left];
        index++, left++;
    }
    
    // Copy elements back to original array
    for(int i = start; i <= end; i++) {
        arr[i] = ans[i - start];
    }
}

void mergesort(int arr[], int start , int end){
    if(start == end)
    return;
    
    int mid = start + (end-start) / 2;
    mergesort(arr, start, mid);     // left
    mergesort(arr, mid+1, end);     // right
    merge(arr, start, mid, end);
}

int main(){
    int arr[]={34,23,2,56,78,11};
    mergesort(arr,0,5);
    
    for(int i=0; i<6; i++){
        cout<<arr[i]<<" ";
    }
    
    return 0;
}
